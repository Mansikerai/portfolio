name: Docker CI + Image Publish + Netlify Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write   # needed to push to GHCR

env:
  PUBLISH_DIR: site

jobs:
  # 1) Lint / validate the static site
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Quick broken-link check across your HTML
      - name: Check links
        uses: lycheeverse/lychee-action@v2
        with:
          args: --verbose --no-progress ${{ env.PUBLISH_DIR }}/**/*.html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 2) Build and smoke-test the Docker image
  docker-build-test:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive image coordinates
        id: meta
        run: |
          OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          echo "image=ghcr.io/${OWNER_LOWER}/${REPO_NAME}" >> $GITHUB_OUTPUT
          echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: |
            ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag }}

      - name: Smoke test container
        run: |
          docker run -d --rm -p 8089:80 --name site ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag }}
          # wait for nginx to be reachable
          for i in {1..20}; do
            curl -sSf http://localhost:8089 >/dev/null && break || sleep 1
          done
          # basic checks
          curl -sSf -I http://localhost:8089 | grep "200 OK"
          curl -sSf http://localhost:8089 | grep -i "<html"
          docker stop site

      - name: Push image to GHCR (only on main, not PRs)
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.tag }}
            ${{ steps.meta.outputs.image }}:latest

  # 3) Deploy static files to Netlify (the live site)
  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-test
    steps:
      - uses: actions/checkout@v4
      - name: Install Netlify CLI
        run: npm install -g netlify-cli@latest
      - name: Deploy to Netlify (production)
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy \
            --dir="${{ env.PUBLISH_DIR }}" \
            --prod \
            --message "CI deploy from $GITHUB_SHA"
